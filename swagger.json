{
  "openapi": "3.0.0",
  "info": {
    "title": "API RICK AND MORTY",
    "description": "users and persoganes API",
    "termsOfService": "",
    "contact": {
      "email": "mateus_santiago2.3@outlook.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "DEV API"
    },
    {
      "url": "",
      "description": "production API"
    }
  ],
  "paths": {
    "/users/all-users": {
      "get": {
        "summary": "list with all users",
        "description": "Route responsible for listing all users",
        "tags": ["users"],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/users"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/findbyid-user/{id}": {
      "get": {
        "summary": "Search for a user by ID",
        "description": "Route responsible for searching for a user by ID",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID for the search",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          }
        }
      }
    },
    "/users/create-user": {
      "post": {
        "summary": "register a user",
        "description": "Route responsible for registering a user",
        "tags": ["users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users"
              },
              "examples": {
                "users": {
                  "value": {
                    "name": "Mateus",
                    "email": "mateus_santiago2.3@outlook.com",
                    "password": "",
                    "image": "http://image.com",
                    "characters": [
                      {
                        "name": "Jerry Smith",
                        "image": "http://imagem.com"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          }
        }
      }
    },
    "/users/update-user/{id}": {
      "put": {
        "summary": "Edit a user by ID",
        "description": "Route responsible for editing a user by ID",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID for the search",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users"
              },
              "examples": {
                "users": {
                  "value": {
                    "name": "Maria",
                    "email": "maria@maria.com",
                    "password": "",
                    "image": "http://image.com",
                    "character": [
                      {
                        "name": "Beth Smith",
                        "image": "http://image.com"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          }
        }
      }
    },
    "/users/delete-user/{id}": {
      "delete": {
        "summary": "Delete a user by ID",
        "description": "Route responsible for deleting a user by ID",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id for deletion",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "sumarry": "user access route",
        "description": "Route responsible for logging in a registered user",
        "tags": ["auth"],
        "responses": {
          "401": {
            "description": "invalid password"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                },
                "examples": {
                  "user": {
                    "value": {
                      "email": "mateus@dev.com.br",
                      "password": 123456
                    }
                  }
                }
              }
            }
          }
        },
        "response": {
          "400": {
            "description": "not found"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/characters/all-characters": {
      "get": {
        "summary": "list with all characters",
        "description": "Route responsible for listing all characters",
        "tags": ["characters"],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/characters"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/characters/findbyid-character/{id}": {
      "get": {
        "summary": "Search for a character by ID",
        "description": "Route responsible for searching for a character by ID",
        "tags": ["characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Character ID for the search",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/characters"
                }
              }
            }
          }
        }
      }
    },
    "/characters/create-character": {
      "post": {
        "summary": "register a character",
        "description": "Route responsible for registering a character",
        "tags": ["characters"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/characters"
              },
              "examples": {
                "character": {
                  "value": {
                    "name": "Rick Sanchez",
                    "image": "http://image.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/characters"
                }
              }
            }
          }
        }
      }
    },
    "/characters/update-character/{id}": {
      "put": {
        "summary": "Edit a character by ID",
        "description": "Route responsible for editing a character by ID",
        "tags": ["characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "character ID for the search",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/characters"
              },
              "examples": {
                "character": {
                  "value": {
                    "name": "Diane Sanchez",
                    "image": "http://image.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/characters"
                }
              }
            }
          }
        }
      }
    },
    "/characters/delete-character/{id}": {
      "delete": {
        "summary": "Delete a character by ID",
        "description": "Route responsible for deleting a character by ID",
        "tags": ["characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "character id for deletion",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    }
    
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "schemas": {
        "user": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "characters": {
              "type": "string"
            }
          }
        },
        "character": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "image": {
              "type": "string"
            }
          }
        }
      }
    }
  }
  
}
